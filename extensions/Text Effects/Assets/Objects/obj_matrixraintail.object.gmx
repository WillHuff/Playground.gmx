<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tail</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Random Characters
randomstr = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`~!@$%^&amp;*()-_=+[{]}\|;:',&lt;.&gt;/?"; // List of all keyboard buttons excluding " ", "#" and """
randomstrlength = string_length(randomstr);                                                                 // Length of the string

// Seperate the random Characters into an array list
for (var i = 0; i &lt;= string_length(randomstr); i++) {
    randomcharacter[i] = string_char_at(randomstr, i + 1);  // Put all the characters into an array
}


// Variables (all set when object is created by the matrix rain object)
father = id;                                        // Used for positioning
pos = 0;                                            // Current position in the tail
cellsize = 0;                                       // Cell size
length = 0;                                         // Current length of the tail
char = randomcharacter[irandom(randomstrlength)];   // Set the character to a random one

// Wait Variables
waittime1 = irandom_range(1,5);                     // Wait time for changing character (static)
wait1 = waittime1;                                  // Counter Variable
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check to see if the father exists
if (instance_exists(father)) {
    y = (father.y - (pos * cellsize));  // Move down if father moves down
} else {
    y += cellsize;                      // If the father doesnt exist, move down very fast.
}

// Check if outside bottom of room and destroy
if (y &gt; room_height) {
    instance_destroy();
}

// Change the random character
if (wait1 &lt;= 0) {
    char = randomcharacter[irandom(randomstrlength)];   // Set the character to a random one
    wait1 = waittime1;                                  // Reset the wait variable
} else {
    wait1--;                                            // Count down
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Make the white part of the effect blend with the green part
if (pos = 1) {
    draw_set_color(make_color_rgb(127,255,127));    // Set color to very light green
}
if (pos = 2) {
    draw_set_color(make_color_rgb(63,255,63));      // Set color to a darker green
}
if (pos &gt; 2) {
    draw_set_color(make_color_rgb(0,255,0));        // Set the color to green
}
// Make the tail fade out
if (pos = length) draw_set_alpha(0.2);      // End of tail, almost transparent
if (pos = length - 1) draw_set_alpha(0.5);  // Almost end of tail, translucent
if (pos = length - 2) draw_set_alpha(0.8);  // Almost end of tail, hardly translucent

// Draw the character
draw_text(x,y,char);

// Reset the alpha
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
