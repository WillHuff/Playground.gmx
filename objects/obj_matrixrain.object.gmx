<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_head</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Random Characters
randomstr = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890`~!@$%^&amp;*()-_=+[{]}\|;:',&lt;.&gt;/?"; // List of all keyboard buttons excluding " ", "#" and """
randomstrlength = string_length(randomstr);                                                                 // Length of the string

// Seperate the random Characters into an array list
for (var i = 0; i &lt;= string_length(randomstr); i++) {
    randomcharacter[i] = string_char_at(randomstr, i + 1);  // Put all the characters into an array
}



// Movement Variables
waittime = irandom_range(2,3);      // How fast the effect moves (static)
wait = waittime;                    // Counting variable    
waittime1 = irandom_range(1,5);;    // How fast the character changes (static)
wait1 = waittime1;                  // Counting variable

// Other Variables
cellsize = 16                                       // Cell size
length = irandom_range(5,20);                       // Length of the tail
char = randomcharacter[irandom(randomstrlength)];   // Current character being displayed




// Create the tail
for (var i = 1; i &lt;= length; i++) {
     b = instance_create(x,y -  (i * cellsize), obj_matrixraintail);    // Create the whole tail
     b.father = id;                                                     // Father variable used for positioning
     b.cellsize = cellsize;                                             // Pass over the cell size
     b.pos = i;                                                         // Current position in the tail
     b.length = length;                                                 // Length of the tail
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Move the effect down
if (wait &lt;= 0) {
    y = y + cellsize;   // Move it down 1 whole cell
    wait = waittime;    // Reset the wait variable
} else {
    wait--;             // Count down the wait variable
}

// Check to see if were outside the BOTTOM of the room 
if (y &gt; room_height) {
    instance_destroy(); // Destroy the effect
}

// Check to see if were running over another string
if (place_meeting(x,y,obj_matrixraintail)) {
    with (other) {
        instance_destroy(); // Destroy the tail if were ontop of it
    }
}

// Change the character
if (wait1 &lt;= 0) {
    char = randomcharacter[irandom(randomstrlength)]    // Set the new character to a random one
    wait1 = waittime1;                                  // Reset the wait variable
} else {
    wait1--;                                            // Count down the wait variable
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the character
draw_set_color(c_white);
draw_text(x,y,char);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
